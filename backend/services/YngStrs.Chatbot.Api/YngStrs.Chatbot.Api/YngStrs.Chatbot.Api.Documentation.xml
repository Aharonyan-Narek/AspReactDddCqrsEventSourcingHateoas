<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YngStrs.Chatbot.Api</name>
    </assembly>
    <members>
        <member name="T:YngStrs.Chatbot.Api.BoundedContexts.UserAnswers.CommandHandlers.RegisterEventStreamHandler">
            <summary>
            Creates event stream for <see cref="N:YngStrs.Chatbot.Api.BoundedContexts.UserAnswers"/> aggregate. 
            </summary>
        </member>
        <member name="M:YngStrs.Chatbot.Api.BoundedContexts.UserAnswers.CommandHandlers.RegisterEventStreamHandler.#ctor(YngStrs.Common.EventSourcing.Core.IEventBus,YngStrs.Common.Cqrs.Core.ICommandValidator{YngStrs.Chatbot.Api.BoundedContexts.UserAnswers.Commands.RegisterEventStream})">
            <summary>
            Initializes a new instance of the <see cref="T:YngStrs.Chatbot.Api.BoundedContexts.UserAnswers.CommandHandlers.RegisterEventStreamHandler"/> class.
            </summary>
            <param name="eventBus"></param>
            <param name="commandValidator"></param>
        </member>
        <member name="M:YngStrs.Chatbot.Api.BoundedContexts.UserAnswers.CommandHandlers.SaveUserAnswersHandler.#ctor(YngStrs.Common.EventSourcing.Core.IEventBus,YngStrs.Common.Cqrs.Core.ICommandValidator{YngStrs.Chatbot.Api.BoundedContexts.UserAnswers.Commands.SaveUserAnswers},MediatR.IMediator)">
            <summary>
            Initializes a new instance of the <see cref="T:YngStrs.Chatbot.Api.BoundedContexts.UserAnswers.CommandHandlers.SaveUserAnswersHandler"/> class.
            </summary>
            <param name="eventBus"></param>
            <param name="commandValidator"></param>
            <param name="mediator"></param>
        </member>
        <member name="M:YngStrs.Chatbot.Api.BoundedContexts.UserPersonalData.CommandHandlers.ProcessNecessaryDataHandler.#ctor(YngStrs.Common.EventSourcing.Core.IEventBus,YngStrs.Common.Cqrs.Core.ICommandValidator{YngStrs.Chatbot.Api.BoundedContexts.UserPersonalData.Commands.ProcessNecessaryData})">
            <summary />
            <param name="eventBus"></param>
            <param name="commandValidator"></param>
        </member>
        <member name="T:YngStrs.Chatbot.Api.Configuration.DependenciesConfiguration">
            <summary>
            Helper class for <see cref="T:YngStrs.Chatbot.Api.Startup"/>.
            </summary>
        </member>
        <member name="T:YngStrs.Chatbot.Api.Controllers.ChatbotController">
            <summary>
            A controller responsible for Chat-bot functionality.
            </summary>
        </member>
        <member name="M:YngStrs.Chatbot.Api.Controllers.ChatbotController.#ctor(YngStrs.Common.Hateoas.Core.IResourceMapper,MediatR.IMediator)">
            <summary>
            Initializes a new instance of the <see cref="T:YngStrs.Chatbot.Api.Controllers.ChatbotController"/> class.
            </summary>
            <param name="resourceMapper"></param>
            <param name="mediator"></param>
        </member>
        <member name="M:YngStrs.Chatbot.Api.Controllers.ChatbotController.RegisterUserAnswersEventStream(YngStrs.Chatbot.Api.BoundedContexts.UserAnswers.Commands.RegisterEventStream)">
            POST /api/chatbot/begin
            <summary>
            Creates event stream for <see cref="T:YngStrs.Chatbot.Api.Domain.Entities.UserAnswers"/> aggregate.
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:YngStrs.Chatbot.Api.Controllers.ChatbotController.SaveUserResults(YngStrs.Chatbot.Api.BoundedContexts.UserAnswers.Commands.SaveUserAnswers)">
            <summary>
            Creates new events for aggregates:
            <see cref="T:YngStrs.Chatbot.Api.Domain.Entities.UserAnswers"/> and
            <see cref="T:YngStrs.Chatbot.Api.Domain.Entities.UserPersonalData"/>.
            </summary>
            <param name="command"></param>
            <response code="201">User answers saved.</response>
            <response code="400">Could not parse answers or email or name.</response>
        </member>
        <member name="T:YngStrs.Chatbot.Api.Domain.Entities.UserAnswers">
            <summary>
            Represents a collection of answers by the current user of the application.
            Technically, it is a domain object:
            1) Considered as event sourced aggregate!
            2) Linked with the event - user completed conversation with the chatbot!
            </summary>
        </member>
        <member name="M:YngStrs.Chatbot.Api.Domain.Entities.UserAnswers.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YngStrs.Chatbot.Api.Domain.Entities.UserAnswers"/> class.
            </summary>
        </member>
        <member name="M:YngStrs.Chatbot.Api.Domain.Entities.UserAnswers.#ctor(System.Guid,System.Collections.Generic.IEnumerable{YngStrs.Chatbot.Api.Domain.Entities.UserChatBotAnswer})">
            <summary>
            Initializes a new instance of the <see cref="T:YngStrs.Chatbot.Api.Domain.Entities.UserAnswers"/> class.
            </summary>
        </member>
        <member name="P:YngStrs.Chatbot.Api.Domain.Entities.UserAnswers.Id">
            <summary>
            Aggregate identifier.
            </summary>
        </member>
        <member name="P:YngStrs.Chatbot.Api.Domain.Entities.UserAnswers.Answers">
            <summary>
            User's chat-bot answers.
            </summary>
        </member>
        <member name="M:YngStrs.Chatbot.Api.Domain.Entities.UserAnswers.SubmitAnswers">
            <!--Events-->
        </member>
        <member name="T:YngStrs.Chatbot.Api.Domain.Entities.UserChatBotAnswer">
            <summary>
            A domain object that represents the pair: Chatbot Question / User Answer.
            </summary>
        </member>
        <member name="P:YngStrs.Chatbot.Api.Domain.Entities.UserChatBotAnswer.Question">
            <summary>
            Chat-bot question.
            </summary>
        </member>
        <member name="P:YngStrs.Chatbot.Api.Domain.Entities.UserChatBotAnswer.Answer">
            <summary>
            User answer.
            </summary>
        </member>
        <member name="T:YngStrs.Chatbot.Api.Domain.Entities.UserPersonalData">
            <summary>
            Represents a domain objects, linked with event
            that occurs when a user  completed conversation with the chatbot,
            accepts terms and conditions and submits name and email.
            </summary>
        </member>
        <member name="M:YngStrs.Chatbot.Api.Domain.Entities.UserPersonalData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YngStrs.Chatbot.Api.Domain.Entities.UserPersonalData"/> class.
            </summary>
        </member>
        <member name="M:YngStrs.Chatbot.Api.Domain.Entities.UserPersonalData.#ctor(System.Guid,System.String,System.String)">
            <param name="userIdentifier"></param>
            <param name="email"></param>
            <param name="name"></param>
        </member>
        <member name="P:YngStrs.Chatbot.Api.Domain.Entities.UserPersonalData.Id">
            <summary>
            Aggregate identifier.
            </summary>
        </member>
        <member name="M:YngStrs.Chatbot.Api.Domain.Entities.UserPersonalData.SubmitNecessaryData">
            <!--Events-->
        </member>
        <member name="T:YngStrs.Chatbot.Api.Domain.Repositories.IUserAnswersRepository">
            <summary>
            Repository linked with <see cref="T:YngStrs.Chatbot.Api.Domain.Entities.UserAnswers"/>.
            </summary>
        </member>
        <member name="T:YngStrs.Chatbot.Api.Persistence.Repositories.UserAnswersRepository">
            <inheritdoc cref="T:YngStrs.Chatbot.Api.Domain.Repositories.IUserAnswersRepository"/>
        </member>
        <member name="M:YngStrs.Chatbot.Api.Persistence.Repositories.UserAnswersRepository.#ctor(Marten.IDocumentSession)">
            <summary>
            Initializes a new instance of the <see cref="T:YngStrs.Chatbot.Api.Persistence.Repositories.UserAnswersRepository"/> class.
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:YngStrs.Chatbot.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:YngStrs.Chatbot.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Configures the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
